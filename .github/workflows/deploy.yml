name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_FRONTEND_REPO }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_BACKEND_REPO }}

      - name: Build and Push Frontend
        run: |
          docker build -t frontend -f client/Dockerfile.frontend client/
          docker tag frontend:latest ${{ secrets.ECR_FRONTEND_REPO }}:latest
          docker push ${{ secrets.ECR_FRONTEND_REPO }}:latest

      - name: Build and Push Backend
        run: |
          docker build -t backend -f server.Dockerfile.backend server/
          docker tag backend:latest ${{ secrets.ECR_BACKEND_REPO }}:latest
          docker push ${{ secrets.ECR_BACKEND_REPO }}:latest

      - name: Update ECS Frontend Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_FRONTEND_SERVICE }} --force-new-deployment

      - name: Update ECS Backend Service
        run: |
          aws ecs update-service --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_BACKEND_SERVICE }} --force-new-deployment