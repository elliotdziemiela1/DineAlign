name: Deploy to AWS Fargate

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_FRONTEND_REPO }}
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin ${{ secrets.ECR_BACKEND_REPO }}

      - name: Build and Push Frontend
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t frontend -f client/Dockerfile.frontend client/
          docker tag frontend:latest ${{ secrets.ECR_FRONTEND_REPO }}:latest
          docker push ${{ secrets.ECR_FRONTEND_REPO }}:latest
          echo "FRONTEND_IMAGE=${{ secrets.ECR_FRONTEND_REPO }}:latest" >> $GITHUB_ENV

      - name: Build and Push Backend
        run: |
          COMMIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t backend -f server/Dockerfile.backend server/
          docker tag backend:latest ${{ secrets.ECR_BACKEND_REPO }}:latest
          docker push ${{ secrets.ECR_BACKEND_REPO }}:latest
          echo "BACKEND_IMAGE=${{ secrets.ECR_BACKEND_REPO }}:latest" >> $GITHUB_ENV
          echo "MONGO_URI=${MONGO_URI}" >> $GITHUB_ENV

      # Register new frontend task definition
      - name: Register Frontend Task Definition
        run: |
          sed "s|<IMAGE>|$FRONTEND_IMAGE|g" ecs/frontend-task-template.json > frontend-task-def.json
          aws ecs register-task-definition --cli-input-json file://frontend-task-def.json

      # Register new backend task definition
      - name: Register Backend Task Definition
        run: |
          sed "s|<IMAGE>|$BACKEND_IMAGE|g; s|<MONGO_URI>|$MONGO_URI|g" ecs/backend-task-template.json > backend-task-def.json
          aws ecs register-task-definition --cli-input-json file://backend-task-def.json

      # Update ECS services to use the *new* task definitions
      - name: Update ECS Frontend Service
        run: |
          REVISION=$(aws ecs describe-task-definition \
            --task-definition Dine-Align-Frontend \
            --query 'taskDefinition.revision' --output text)
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_FRONTEND_SERVICE }} \
            --task-definition Dine-Align-Frontend:$REVISION

      - name: Update ECS Backend Service
        run: |
          REVISION=$(aws ecs describe-task-definition \
            --task-definition Dine-Align-Backend \
            --query 'taskDefinition.revision' --output text)
          aws ecs update-service \
            --cluster ${{ secrets.ECS_CLUSTER }} \
            --service ${{ secrets.ECS_BACKEND_SERVICE }} \
            --task-definition Dine-Align-Backend:$REVISION